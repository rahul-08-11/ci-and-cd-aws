# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: read

jobs:
  build:

    runs-on: aws

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi


  deploy:

    runs-on: aws

    steps:
      - name: Get the tag
        uses: olegtarasov/get-tag@v2.1.4
        id: tagName

      - name: Use tag
        run: echo "Tag is ${{ steps.tagName.outputs.tag }}"
      
      - name: Get previous tag
        id: previous_tag
        run: |
          git fetch --tags
          PREVIOUS_TAG=$(git tag --sort="-committerdate" | sed -n 2p)
          echo "previous_tag=$PREVIOUS_TAG" >> $GITHUB_OUTPUT


      - name: Run SSH command to remote VM
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: 22
          script: |
            git clone https://github.com/rahul-08-11/ci-and-cd-aws.git
            cd ci-and-cd-aws/
            sudo docker build -t  ci-and-cd-aws/dev:${{ steps.tagName.outputs.tag }} .
            ## clean docker
            sudo docker container stop $(docker container ls -q --filter name=ci-and-cd-aws/dev:${{ steps.previous_tag.outputs.previous_tag }})
            sudo docker container rm $(docker container ls -aq --filter name=ci-and-cd-aws/dev:${{ steps.previous_tag.outputs.previous_tag }})
            ## run new version of dev
            sudo docker run -p 8000:8000 ci-and-cd-aws/dev:${{ steps.tagName.outputs.tag }}
            
  
        
    
